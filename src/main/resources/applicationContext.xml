<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <context:component-scan base-package="com.yxj.dao.impl,com.yxj.service.impl,com.yxj.action,com.yxj.listener"/>
    <!--c3p0连接池,主数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--c3p0连接池,从数据源-->
    <bean id="dataSource-1" parent="dataSource">
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/survey_1?useUnicode=true&amp;characterEncoding=utf8"/>
    </bean>

    <!--自定义数据源路由器-->
    <bean id="dataSourceRouter" class="com.yxj.dataSource.SurveyDataSourceRouter">
        <!--目标数据源集-->
        <property name="targetDataSources">
            <map>
                <entry key="odd" value-ref="dataSource"/>
                <entry key="even" value-ref="dataSource-1"/>
            </map>
        </property>
        <!--默认数据源-->
        <property name="defaultTargetDataSource" ref="dataSource"/>
    </bean>

    <!-- Hibernate -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRouter"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:hibernate-mappings</value>
            </list>
        </property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!-- 写操作 -->
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>

            <!-- 读操作 -->
            <tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>

            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>

    <!--缓存管理器-->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManagerFactoryBean"/>
    </bean>

    <!--缓存管理器工厂bean-->
    <bean id="ehCacheManagerFactoryBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>

    <!--自定义缓存key生成器-->
    <bean id="surveyKeyGenerator" class="com.yxj.cache.SurveyKeyGenerator"/>

    <!--缓存通知-->
    <cache:advice id="cacheAdvice" cache-manager="cacheManager" key-generator="surveyKeyGenerator">
        <cache:caching cache="survey">
            <cache:cacheable method="get*"/>
            <cache:cacheable method="load*"/>
            <cache:cacheable method="find*"/>
            <cache:cache-evict method="save*" all-entries="true"/>
            <cache:cache-evict method="update*" all-entries="true"/>
            <cache:cache-evict method="delete*" all-entries="true"/>
            <cache:cache-evict method="clear*" all-entries="true"/>
            <cache:cache-evict method="toggle*" all-entries="true"/>
            <cache:cache-evict method="move*" all-entries="true"/>
            <cache:cache-evict method="batch*" all-entries="true"/>
            <cache:cache-evict method="execute*" all-entries="true"/>
        </cache:caching>
    </cache:advice>

    <!--日志记录仪-->
    <bean id="logger" class="com.yxj.advice.Logger"/>

    <!--aop配置-->
    <aop:config>
        <!--事务切入点通知-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" order="2"/>

        <aop:advisor advice-ref="cacheAdvice" pointcut="execution(* *..*Service.get*(..))
                                                            or execution(* *..*Service.load*(..))
                                                            or execution(* *..*Service.find*(..))" order="0"/>

        <!--Logger切面-->
        <aop:aspect id="loggerAspect" ref="logger" order="1">
            <aop:around method="record" pointcut="(execution(* *..*Service.save*(..))
                                                    or execution(* *..*Service.update*(..))
                                                    or execution(* *..*Service.delete*(..))
                                                    or execution(* *..*Service.batch*(..))
                                                    or execution(* *..*Service.new*(..))
                                                    or execution(* *..*Service.move*(..))
                                                    or execution(* *..*Service.clear*(..))
                                                    or execution(* *..*Service.toggle*(..)))
                                                    and !bean(logService)"/>
        </aop:aspect>
    </aop:config>
</beans>